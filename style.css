@font-face {
    font-family: zen-dots;
    src: url(./assets/ZenDots-Regular.ttf);
}

* {
    margin: 0px;
    font-family: zen-dots;
}

:root {
    --dark-background: rgb(0, 11, 20);
    --light-background: rgb(0, 18, 32);
    --highlight-color: #187cc9;
    --glow:  -2px 5px 10px 7px var(--highlight-color);
    --book-glow: 2px 5px 10px 7px var(--unread-color);
    --checkbox-color: #5fcf80;
    --read-book-glow: 2px 5px 10px 7px var(--checkbox-color);

    --unread-color: rgb(245, 139, 1);
    background: repeating-radial-gradient(#000000, var(--dark-background) 3%);    
    background-attachment: fixed;
    background-position-y: 57.5vh;
    background-position-x: -35vw;
}

.sidebar {
    grid-area: 1 / 1 / -1 / 2;
    background-color: var(--dark-background);
    color: beige;
    height: 100vh;
    width: 30vw;
    position: fixed;
    z-index: 2;
}

.sidebar fieldset {
    border: none;
    border-radius: 2px;
    padding: 20px;
}

fieldset#fieldset-1 {
    height: 25vh;
    display: flex;
    flex-direction: column;
    justify-content: space-evenly;
    gap: 1rem;
}

fieldset#fieldset-1 h2 {
    font-size: 2.3rem;
}

fieldset#fieldset-1 h5 {
    font-size: 1rem;
    font-weight: 500;
}

fieldset#fieldset-2 {
    background-color: var(--light-background);
    height: 50vh;
    box-shadow: var(--glow);
    position: relative;
    left: .4rem;
    border-radius: 3px;
}

fieldset#fieldset-2 legend {
    position: relative;
    top: 2.1rem;
    font-size: 20px;
    padding: 5px;
}

fieldset#fieldset-2 #input-container{
    display: flex;
    flex-direction: column;
    row-gap: 1.7rem;
    position: relative;
    top: 1.3rem;
}

fieldset#fieldset-2 .divider {
    width: 100%;
    height: 1px;
    background-color: white;
}

fieldset#fieldset-2 .label{
    display: flex;
    flex-direction: column;
    row-gap: 10px;
}

fieldset#fieldset-3 {
   display: flex;
   justify-content: flex-end;
}

fieldset#fieldset-3 #button-container {
    padding: 10px;
}

#button-container button {
    height: 3rem;
    width: 9rem;
    background-color: var(--light-background);
    color: aqua;
    font-weight: 700;
    font-size: 2rem;
    box-shadow:  var(--glow);
    border-radius: 200px;
    cursor: pointer;
}

#button-container button:active {
    box-shadow: 0px 0px 5px 12px var(--highlight-color);
    transform: translate3d(-.2rem, .4rem, 0px);
}

.header {
    grid-area: 1 / 2 / 2 / -1;
    background-color: var(--highlight-color);
    display: flex;
    gap: 1.3rem;
    height: 15vh;
    width: 70vw;
    position: fixed;
    margin-left: 30vw;
    z-index: 1;
}

.header .text-container {
    display: grid;
    grid-template-rows: 2fr 1fr;
}

.text-container h1 {
    align-self: end;
    font-size: 4rem;
}

.text-container h4 {
    font-size: 1.5rem;
}

.content {
    grid-area: 2 / 2 / -1 / -1;
    /* background-color: lavender; */
    width: 62vw;
    margin-left: 30vw;
    position: relative;
    top: 15vh;
    z-index: 0;
    padding: 3.5vw;
    display: grid;
    grid-template-columns: 13rem 13rem 13rem;
    grid-auto-rows: 16rem;
    column-gap: 4vw;
    row-gap: 4vw;
    justify-content: center;
}

.empty {
    width: 100%;
    height: 100%;
    border: 1px dashed white;
    border-radius: 12px;
}

.book {
    width: 100% - 20px;
    height: 100% - 20px;
    border-radius: 12px;
    background-color: var(--light-background);
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: space-evenly;
    padding: 10px;
    border: solid 3px black;
    box-shadow: var(--book-glow);
    position: relative;
    left: -3px;
    top: -7px;
    color: beige;
}

.book.read {
    box-shadow: var(--read-book-glow);
}

.book h5 {
    align-self: flex-start;
}

.book .page {
    align-self: flex-end;
    display: flex;
    align-items: center;
    gap: 8px;
}

.page h5 {
    position: relative;
    top: 1rem;
}

.book>.total-pages {
    align-self: flex-end;
}

.book>.book-buttons {
    display: flex;
    gap: 1.5rem;
}

.book .page .page-buttons {
    display: flex;
    flex-direction: column;
    gap: 4px;
}

.page-buttons button {
    height: 20px;
    border-radius: 20px;
    color: beige;
    background-color: var(--dark-background);
    box-shadow: 0px 0px 3px 3px var(--highlight-color);
    cursor: pointer;
}

.page-buttons .button-text {
    position: relative;
    top: -.05rem;
}

.my-label {
    display: block;
    width: 70px;
    height: 26px;
    position: relative;
    cursor: pointer;
    border-radius: 30px;
}

.sliding-groove {
    background-color: var(--dark-background);
    border-radius: 26px;
    transition: all .3s ease;
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    box-shadow: 0px 0px 3px 3px var(--highlight-color);
}

.sliding-groove::after {
    content: "";
    width: 28px;
    height: 24px;
    border-radius: 50%;
    background-color: beige;
    transition: all .3s ease;
    position: absolute;
    top: 1px;
    left: 1px;
}

.my-label input {
    display: none;
}

input:checked + .sliding-groove {
    background-color: var(--checkbox-color);
}

input:checked + .sliding-groove::after {
    transform: translateX(40px);
}

.my-label .labels {
    position: absolute;
    top: 2rem;
    left: .3rem;
    width: 100%;
    height: 100%;
    color: var(--checkbox-color);
    font-size: 15px;
    font-weight: 700;
    transition: all .3s ease;
}

.my-label .labels::after {
    content: attr(data-off);
    position: absolute;
    opacity: 1;
    transition: all .3s ease;
}

.my-label .labels::before {
    content: attr(data-on);
    position: absolute;
    opacity: 0;
    transition: all .3s ease;
}

.my-label input:checked~.labels::after {
    opacity: 0;
}

.my-label input:checked~.labels::before {
    opacity: 1;
}

.delete-button {
    width: 80px;
    height: 26px;
    background-color: crimson;
    box-shadow: 0px 0px 3px 3px var(--highlight-color);
    border-radius: 30px;
    color: beige;
    font-weight: 700;
    cursor: pointer;
}

.field {
    border-radius: 5px;
}

.field:valid {
    border: 2px solid green;
}

.field:invalid {
    border: 2px solid var(--unread-color);
}

.field:focus {
    box-shadow: 1px 1px 12px 3px var(--highlight-color);
}